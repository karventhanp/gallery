{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Apps\\\\react-express-image-audio-video-gallery\\\\frontend\\\\src\\\\Components\\\\Yimages.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Yimages() {\n  _s();\n\n  const [images, setImages] = useState(() => {\n    axios.get(\"http://localhost:5000/data/getimages\").then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Yimages, \"ep7MzetHMm5nuzc7vYZh7JAvZQM=\");\n\n_c = Yimages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Yimages\");","map":{"version":3,"sources":["D:/My Apps/react-express-image-audio-video-gallery/frontend/src/Components/Yimages.jsx"],"names":["React","useState","axios","Yimages","images","setImages","get","then","res","console","log","data","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,MAAM;AACvCC,IAAAA,KAAK,CAACI,GAAN,CAAU,sCAAV,EACKC,IADL,CACUC,GAAG,IAAG;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAJlB;AAKH,GANmC,CAApC;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA7BuBV,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function Yimages() {\r\n    const [images, setImages] = useState(() => {\r\n        axios.get(\"http://localhost:5000/data/getimages\")\r\n            .then(res =>{\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    });\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                    {/*\r\n                        images ?\r\n                            images.map((i, k) => (\r\n                                <div className=\"col-auto\" key={k}>\r\n                                <div className=\"card\">\r\n                                <img src={Buffer.from(i.data).toString()} alt=\"yourimage\" className=\"card-img img-responsive\"/>\r\n                                <div className=\"card-body\">\r\n                                  <h5 className=\"card-title\">{i.name}</h5>\r\n                                </div>\r\n                              </div>\r\n                              </div>\r\n                    ))\r\n                    :\r\n                    <small className=\"text-center mt-5 text-danger\">No images !</small>\r\n                            */}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}